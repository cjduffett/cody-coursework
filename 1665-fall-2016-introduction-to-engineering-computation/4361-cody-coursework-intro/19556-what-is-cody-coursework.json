{"meta":{"courseName":"1665-fall-2016-introduction-to-engineering-computation","assignmentName":"4361-cody-coursework-intro","problemName":"19556-what-is-cody-coursework"},"title":"What is Cody Coursework?","description":"Cody Coursework is a new platform that provides MATLAB programming assignments to students and automatically grades their work. It also provides students with immediate feedback for incorrect solutions, guiding them to a correct answer. We will be using Cody Coursework this semester for many of our programming assignments.\n\nFor each worksheet assigned this semester we recommend that you *do these problems first.* These problems will help reinforce the new concepts you learn from the online lectures and in-class worksheets. The immediate feedback will also help identify common mistakes that new students frequently make. This will help us be more effective teachers in the limited class time we have.\n\n*Cody Coursework is not perfect.* We cannot possibly catch every mistake that students make. Occasionally we make our own mistakes when writing some of the scripts that grade these problems. If you encounter an error, please *post any issues to the edX discussion board* or notify a TA during class.\n\nBegin each problem by clicking the \"solve\" button below:","type":1,"template":"% You will write your solution to the problem description above in this space.\n% Occasionally we will provide comments or variable names to help guide\n% your solution. For example:\n\n% assign 5 to the variable \"x\"\nx = 5\n\n% When you think you have a correct solution, click the \"test\" button to run\n% the automated suite of tests. These tests are hidden from students. The\n% results of these test will appear below in the \"Results\" section. Tests\n% passed will appear in green. Tests failed will appear in red, with feedback.\n\n% Click \"test\" now to see an example of these results:","solution":"% You will write your solution to the problem description above in this space.\n% Occasionally we will provide comments or variable names to help guide\n% your solution. For example:\n\n% assign 5 to the variable \"x\"\nx = 5\n\n% When you think you have a correct solution, click the \"test\" button to run\n% the automated suite of tests. These tests are hidden from students. The\n% results of these test will appear below in the \"Results\" section. Tests\n% passed will appear in green. Tests failed will appear in red, with feedback.\n\n% Click \"test\" now to see an example of these results:","visibleTests":"","hiddenTests":"%%\nrun('solution')\nassert(true, 'Correct solutions will look like this!')\nfprintf('Correct solutions will look like this. Any program output will appear here.\\n')\n\n%%\nassert(false, 'Incorrect solutions will look like this. Feedback and suggestions will appear here.')"}