{"meta":{"courseName":"1665-fall-2016-introduction-to-engineering-computation","assignmentName":"4364-chapter-3-introduction-to-matlab-programming","problemName":"19567-3-1-calibration"},"title":"3.1 - Calibration","description":"A company is calibrating some measuring instrumentation and has measured the radius and height of one cylinder *10* separate times; they are in vector variables \"r\" and \"h\". Find the volume from each trial, which is given by pi*r^2*h, and store the volumes in a vector \"vol\".","type":1,"template":"% here are vectors r and h:\nr = [5.501  5.5  5.499 5.498 5.5 5.5 5.52 5.51 5.5 5.48];\nh = [11.11 11.1 11.1 11.12 11.09 11.11 11.11 11.1 11.08 11.11];\n  \n% calculate vol:\nvol = ","solution":"% here are vectors r and h:\nr = [5.501  5.5  5.499 5.498 5.5 5.5 5.52 5.51 5.5 5.48];\nh = [11.11 11.1 11.1 11.12 11.09 11.11 11.11 11.1 11.08 11.11];\n  \n% calculate vol:\nvol = pi * r .^2 .* h;","visibleTests":"","hiddenTests":"%%\nrun('solution')\n\n% check for variable existence. Do this for all named variables in the\n% problem description or variables provided in the initial_display\nvars = whos;\n\nis_r = any(strcmp('r',{vars.name}));\nassert(is_r,'Make sure you define a variable with the name \"r\".')\nis_h = any(strcmp('h',{vars.name}));\nassert(is_h,'Make sure you define a variable with the name \"h\".')\nis_vol = any(strcmp('vol',{vars.name}));\nassert(is_vol,'Make sure you define a variable with the name \"vol\".')\n\n\n% check expressions for r and h (each needs 10 elements):\nassert(isequal(length(r),10),'Make sure \"r\" has 10 values.');\nassert(isequal(length(h),10),'Make sure \"h\" has 10 values.');\n\nmyr1 = r(and(r>0,h>0));\nmyh1 = h(and(r>0,h>0));\n\ntruevol = pi*myr1.^2.*myh1;\ntolerance = 0.000001;\n \nassert(numel(vol) > 1, 'Make sure you are using element-wise multiplication instead of matrix multiplication.')\nassert(all((abs(vol - truevol) < tolerance)),'Check your expression for vol.')"}