{"meta":{"courseName":"1665-fall-2016-introduction-to-engineering-computation","assignmentName":"4364-chapter-3-introduction-to-matlab-programming","problemName":"19569-3-3-odds-and-evens"},"title":"3.3 - Odds and Evens","description":"Generate a vector of 20 random integers, each in the range of 50 to 100 and store it in vec. Create a variable evens that stores all of the even numbers from the vector, and a variable odds that stores all of the odd numbers.","type":1,"template":"% generate a vector of random integers:\nvec = \n  \n% store all of the even and odd numbers in the variables \"evens\" and \"odds\":\nevens = \nodds = ","solution":"% generate a vector of random integers:\nvec = randi([50,100],1,20);\n  \n% store all of the even and odd numbers in the variables \"evens\" and \"odds\":\nevens = vec(mod(vec,2) == 0);\nodds = vec(mod(vec,2) == 1);","visibleTests":"","hiddenTests":"%%\nrun('solution')\n\n% check for variable existence\nvars = whos;\n\nis_vec = any(strcmp('vec',{vars.name}));\nassert(is_vec,'Make sure you define a variable with the name \"vec\".')\n\nis_evens = any(strcmp('evens',{vars.name}));\nassert(is_evens,'Make sure you define a variable with the name \"evens\".')\n\nis_odds = any(strcmp('odds',{vars.name}));\nassert(is_odds,'Make sure you define a variable with the name \"odds\".')\n\n% check vector for correct length and values\nl_test = 20;\nassert(isequal(length(vec),l_test),'Make sure your vector has exactly 20 elements.')\nassert(~any(gt(vec,100)),'Make sure your vector has values between 50 and 100.')\nassert(~any(lt(vec,50)),'Make sure your vector has values between 50 and 100.')\n\n% check expression for evens\nlogv = mod(vec,2) == 0;\nevens_test = vec(logv);\nassert(isequal(evens,evens_test),'Check your expression for the variable \"evens\". How do you test if a number is even?')\n\n% check expression for odds\nodds_test = vec(~logv);\nassert(isequal(odds,odds_test),'Check your expression for the variable \"odds\". How do you test if a number is odd?')\n\n% make sure they randomly generated vec using randi (or rand with rounding? just check for a random fn)\ncode = fileread('solution.m');\nt = mtree(code);\nmatchesrandi = mtfind(t,'Kind','ID','String','randi');\nmatchesrand = mtfind(t,'Kind','ID','String','rand');\nassert(or(~isnull(matchesrandi), ~isnull(matchesrand)),'Make sure to generate \"vec\" using one of the random number functions.')"}