{"meta":{"courseName":"1665-fall-2016-introduction-to-engineering-computation","assignmentName":"4364-chapter-3-introduction-to-matlab-programming","problemName":"19571-3-5-sum-of-fractions"},"title":"3.5 - Sum of Fractions","description":"Find the following sum by first creating vectors for the numerators and denominators:\n\n<<http://edge.edx.org/asset-v1:BUx+EK127+2015_SummerI+type@asset+block@ws3_p2_fraction.png>>\n\n\nPlease do not change the variable names provided below.","type":1,"template":"% define the numerator and the denominator:\nnum =\ndenom = \n  \n% calculate the sum:\nmysum = ","solution":"% define the numerator and the denominator:\nnum =3:2:9;\ndenom = 1:4;\n  \n% calculate the sum:\nmysum = sum(num ./ denom);","visibleTests":"","hiddenTests":"%%\nrun('solution')\n\n% check for variable existence\nvars = whos;\n\nis_num = any(strcmp('num',{vars.name}));\nassert(is_num,'Make sure you define a variable with the name \"num\".')\n\nis_denom = any(strcmp('denom',{vars.name}));\nassert(is_denom,'Make sure you define a variable with the name \"denom\".')\n\nis_mysum = any(strcmp('mysum',{vars.name}));\nassert(is_mysum,'Make sure you define a variable with the name \"mysum\".')\n\n% check for correct num,denom,sum expressions\nnum_test = 3:2:9;\ndenom_test = 1:4;\nmysum_test = sum(num_test ./ denom_test);\nmysum_test2 = sum(num .* denom.^-1);\n  \n% enforce use of the ./ (or .\\) operator\ncode = fileread('solution.m');\nnormaldivide = strfind(code,'/');\nnormaldivideinto = strfind(code,'\\');\ndotdivide = strfind(code,'./');\ndotdivideinto = strfind(code,'.\\');\ndotinverse = strfind(code,'.^-1');\n  \nassert(any([~isempty(dotdivide),~isempty(dotdivideinto),~isempty(dotinverse)]),'Your solution must use the DOT operator.')\nassert(lt(length(normaldivide),2),'You solution must use division EFFICIENTLY (not more than once).')\nassert(lt(length(normaldivideinto),2),'You solution must use division EFFICIENTLY (not more than once).')\n  \nassert(isequal(num,num_test),'Check your expression for the numerator.')\nassert(isequal(denom,denom_test),'Check your expression for the denominator.')\nassert(any([isequal(mysum,mysum_test),isequal(mysum,mysum_test2)]),'Check your expression for the sum.')"}