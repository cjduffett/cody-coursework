{"meta":{"courseName":"1665-fall-2016-introduction-to-engineering-computation","assignmentName":"4364-chapter-3-introduction-to-matlab-programming","problemName":"19574-3-8-green"},"title":"3.8 - Green++","description":"Write a script that assigns values for the x coordinate and y coordinate of a point, and then plots this point using a green +. Use the default axes. Be sure to label your axes and and give your plot a fun title!","type":1,"template":"% create x and y coordinates:\nx = \ny =\n  \n% plot your point and add labels to your plot:\n  ","solution":"% create x and y coordinates:\nx = 2;\ny = 3;\n  \n% plot your point and add labels to your plot:\nplot(x,y,'g+')\nxlabel('foo')\nylabel('bar')\ntitle('foobar')\n  ","visibleTests":"","hiddenTests":"%%\nrun('solution')\n\n% check for variable existence\nvars = whos;\n  \nis_x = any(strcmp('x',{vars.name}));\nassert(is_x,'Make sure you define a variable with the name \"x\".')\n\nis_y = any(strcmp('y',{vars.name}));\nassert(is_y,'Make sure you define a variable with the name \"y\".')\n\n% any values of x and y are fine, but must be numeric\nassert(isnumeric(x),'x must be a number.')\nassert(isnumeric(y),'y must be a number.')\n  \n% children of the root object '0' will be figure windows.\n% check for two figure windows, NOTE: handles are a column vector in reverse order, hence the flipud\nfig_Handles = flipud(get(0,'Children'));\nassert(numel(fig_Handles) == 1,'Make sure you only create one plot.')\n\n% check that title, xlabel, ylabel come after plot\ncode = fileread('solution.m');\nplotpos = strfind(code,'plot(');\ntitlepos = strfind(code,'title(');\nxlabelpos = strfind(code,'xlabel(');\nylabelpos = strfind(code,'ylabel(');\n  \nassert(~isempty(plotpos),'You should use the plot() function to plot your point.')\nassert(~isempty(titlepos),'You should use the title() function to title your plot.')\nassert(~isempty(xlabelpos),'You should use the xlabel() function to label the x-axis.')\nassert(~isempty(ylabelpos),'You should use the ylabel() function to label the y-axis.')\nassert(all([lt(plotpos,titlepos), lt(plotpos,xlabelpos), lt(plotpos,ylabelpos)]),'You must plot your point BEFORE you title your plot or label your axes.')\n  \n% check plot 1\nah = get(fig_Handles(1),'CurrentAxes');\nplotobj = get(ah,'Children');\n\n% each plot must be graded in a try-catch statement as you attempt to access plot data\ntry\n  % check plot data\n  x_user = get(plotobj,'XData');\n  assert(length(x_user) == 1,'You must plot one (and ONLY one) (x,y) point... check your plot() function.')\n  assert(isequal(x_user,x),'Make sure you plot the x value you defined.')\n  y_user = get(plotobj,'YData'); \n  assert(length(y_user) == 1,'You must plot one (and ONLY one) (x,y) point... check your plot() function.')\n  assert(isequal(y_user,y),'Make sure you plot the y value you defined.')\n  \n  % check plot properties\n  \n  % color\n  color = get(plotobj,'Color');\n  test = [1 0 1];\n  assert(all(~color == test),'You must plot a GREEN point.')\n\n  % marker\n  marker = get(plotobj,'Marker');\n  assert(strcmp(marker,'+'),'You must use a green plus sign to mark your point.')\n  \n  % xlabel\n  xlbl = get(ah,'Xlabel');\n  xstr = get(xlbl,'String');\n  assert(gt(length(xstr),0),'Make sure you label your x axis.')\n  \n  % ylabel\n  ylbl = get(ah,'Ylabel');\n  ystr = get(ylbl,'String');\n  assert(gt(length(ystr),0),'Make sure you label your y axis.')\n  \n  % title\n  tit = get(ah,'Title');\n  titstr = get(tit,'String');\n  assert(gt(length(titstr),0),'Make sure your plot has a title.')\n  \ncatch me\n  disp('There was an error grading the plot.')\n  rethrow(me)\nend"}