{"meta":{"courseName":"1665-fall-2016-introduction-to-engineering-computation","assignmentName":"4363-chapter-2-vectors-and-matrices","problemName":"19563-2-3-logical-expressions"},"title":"2.3 - Logical Expressions","description":"Create two variables x and y and store numbers in them. Write an expression that would be *true* if the value of x is greater than 5 or if the value of y is less than 10, but not if both of those are *true* . Please do not change the variable names provided.","type":1,"template":"% assign values for x and y:\nx = \ny =\n\n% write your logical expression here:\nlogexp = ","solution":"% assign values for x and y:\nx = 10;\ny = 9;\n\n% write your logical expression here:\nlogexp = xor(x > 5, y < 10);","visibleTests":"","hiddenTests":"%%\nrun('solution')\n\n% check for variable existence\nvars = whos;\nis_x = any(strcmp('x', {vars.name}));\nassert(is_x, 'Make sure you define a variable with the name \"x\"')\nis_y = any(strcmp('y', {vars.name}));\nassert(is_y, 'Make sure you define a variable with the name \"y\"')\nis_logexp = any(strcmp('logexp', {vars.name}));\nassert(is_logexp, 'Make sure you assign your result to the variable \"logexp\"')\n\n% check for the xor function\ncode = fileread('solution.m');\nis_xor = strfind(code, 'xor(');\nif length(is_xor) == 1\n    suggestion = '';\nelse\n    suggestion = 'Have you considered the xor() function?';\nend\n\n% check that their logical expression is correct\nlogexp_correct = xor(x > 5, y < 10);\nassert(logexp == logexp_correct, ['Check that your logical comparisons are correct. ', suggestion])\n\n% check for assignment suppression\nnum_suppressions = 3;\nscolons = strfind(code, ';');\nassert(numel(scolons) >= num_suppressions, 'Make sure to suppress your variable assignments. For example: r = 4;')"}