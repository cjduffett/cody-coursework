{"meta":{"courseName":"1665-fall-2016-introduction-to-engineering-computation","assignmentName":"4362-chapter-1-introduction-to-matlab","problemName":"19560-1-4-randi"},"title":"1.4 - randi","description":"The |*randi()*| function generates random integers. Using the *randi* function, accomplish the following tasks:\n\n* Assign a random integer *between 1 and _x_*  to the variable \"scalar\" (Note: assign a positive integer value to _x_ first!)\n* Create a *2x3* matrix of random integers between -4 and 6 and store it in \"mat\"","type":1,"template":"% assign a positive integer value to x\nx = \n\n% generate a random integer between 1 and x\nscalar = \n\n% generate a 2x3 matrix of random integers between -4 and 6\nmat = ","solution":"% assign a positive integer value to x\nx = 100;\n% generate a random integer between 1 and x\nscalar = randi(x);\n% generate a 2x3 matrix of random integers between -4 and 6\nmat = randi([-4,6],2,3);","visibleTests":"","hiddenTests":"%%\nrun('solution')\n\n% check for variable existence\nvars = whos;\nis_mat = any(strcmp('mat', {vars.name}));\nassert(is_mat, 'Make sure you define a variable with the name \"mat\"')\nis_x = any(strcmp('x', {vars.name}));\nassert(is_x, 'Make sure you define a variable with the name \"x\"')\nis_scalar = any(strcmp('scalar', {vars.name}));\nassert(is_scalar, 'Make sure you define a variable with the name \"scalar\"')\n\n% check for correct size/value/range\n[r, c] = size(x);\nassert(and(r==1,c==1),'Make sure \"x\" is a scalar value.')\nassert(floor(x)==x,'Make sure x is an integer.')\n[r, c] = size(scalar);\nassert(and(r==1,c==1),'Make sure \"scalar\" is a scalar value.')\nassert(scalar>=1,'Make sure \"scalar\" is greater than or equal to 1.');\nassert(scalar<=x,'Make sure \"scalar\" is less than or equal to x.');\n\n[foo, bar] = size(mat);\nassert(foo == 2, 'Your matrix should be 2x3. Make sure your matrix has 2 rows.')\nassert(bar == 3, 'Your matrix should be 2x3. Make sure your matrix has 3 columns.')\n\n% check for integers in mat\nintmat = round(mat);\nassert(all(all(intmat == mat)), 'Your matrix should contain all INTEGERS.')\n\n% check for the correct range in mat\nassert(all(all(mat >= -4)), 'Your matrix contains one or more integers less than -4. Your matrix should contain only integers between -4 and 6.')\nassert(all(all(mat <= 6)), 'Your matrix contains one or more integers greater than 6. Your matrix should contain only integers between -4 and 6.')\n\n%make sure randi is used\ncode = fileread('solution.m');\nt = mtree(code);\nmatchesrandi = mtfind(t,'Kind','ID','String','randi');\nassert(count(matchesrandi)==2,'Make sure to use randi twice; once for \"scalar\" and once for \"mat\".')\n\n% check for assignment suppression\nscolons = strfind(code, ';');\nassert(numel(scolons) >= 3, 'Make sure to suppress all your variable assignments with a semicolon. For example: a = 4;')"}