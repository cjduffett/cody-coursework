{"meta":{"courseName":"1665-fall-2016-introduction-to-engineering-computation","assignmentName":"4365-chapter-4-selection-statements","problemName":"19583-4-1-beaufort-wind-scale"},"title":"4.1 - Beaufort Wind Scale","description":"The Beaufort Wind Scale is used to characterize the strength of winds. The scale uses integer values and goes from a force of 0, which is no wind, to 12, which is a hurricane. The following script first generates a random force value. Then, it stores a message regarding what type of wind that force represents, using a *switch* statement. You are to re-write this *switch* statement as one nested *if-else* statement that accomplishes exactly the same thing. You may use *else* and/or *if-else* clauses.\n  \n  ranforce = randi([0,12]);\n\n  switch ranforce\n  &#160;&#160;&#160;&#160;case 0\n  &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;msg = 'There is no wind.';\n  &#160;&#160;&#160;&#160;case {1,2,3,4,5,6}\n  &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;msg = 'There is a breeze.';\n  &#160;&#160;&#160;&#160;case {7,8,9}\n  &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;msg = 'This is a gale.';\n  &#160;&#160;&#160;&#160;case {10,11}\n  &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;msg = 'It is a storm.';\n  &#160;&#160;&#160;&#160;case 12\n  &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;msg = 'Hello, Hurricane!';\n  end","type":1,"template":"% Generate a random force value:\nranforce = randi([0,12]);\n\n% write your solution here:\n","solution":"% Generate a random force value:\nranforce = randi([0,12]);\n\n% write your solution here:\nif ranforce == 0\n    msg = 'There is no wind';\nelseif ranforce > 0 && ranforce < 7\n    msg = 'There is a breeze';\nelseif ranforce > 6 && ranforce < 10\n    msg = 'There is a gale';\nelseif ranforce > 9 && ranforce < 12\n    msg = 'It''s a storm.';\nelse\n    msg = 'Hello, hurricane!';\nend","visibleTests":"","hiddenTests":"%%\nrun('solution')\n\n% check for variable existence. Do this for all named variables in the\n% problem description or variables provided in the initial_display\nvars = whos;\n\n% for example:\nis_ranforce = any(strcmp('ranforce',{vars.name}));\nassert(is_ranforce,'Make sure you define a variable with the name \"ranforce\".')\n\nis_msg = any(strcmp('msg',{vars.name}));\nassert(is_msg,'Make sure you define a variable with the name \"msg\".')\n\n% check that the student did not change any initial variables\nassert(numel(ranforce) == 1,'Please do not change the expression for ranforce.')\nassert(lt(ranforce,13),'Please do not change the range of ranforce.')\nassert(gt(ranforce,-1),'Please do not change the range of ranforce.')\n  \n% check that the student didn't use \"switch\":\ncode = fileread('solution.m');\nt = mtree(code);\nmatches = mtfind(t,'Kind','SWITCH');\nassert(isnull(matches),'Your solution should NOT use a switch statement.')\n\n% check that the student used an \"if\" construct:\nmatches = mtfind(t,'Kind','IF');\nassert(~isnull(matches),'Your solution should use an \"if\" statement.')\n\n% check the students logic using this test logic:\nswitch ranforce\n  case 0\n    test_keyword = 'wind';\n  case {1,2,3,4,5,6}\n    test_keyword = 'breeze';\n  case {7,8,9}\n    test_keyword = 'gale';\n  case {10,11}\n    test_keyword = 'storm';\n  case 12\n    test_keyword = 'hurricane';\nend\n  \n% check for correct keyword in the student's message\ncheck = strfind(upper(msg),upper(test_keyword));\nassert(~isempty(check),'Oops! The correct message was not stored. Check the logic of your if-else statement(s).')"}